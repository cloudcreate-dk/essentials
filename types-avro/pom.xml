<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright 2021 the original author or authors.
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~      https://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->

<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>dk.cloudcreate.essentials</groupId>
        <artifactId>parent</artifactId>
        <version>${revision}</version>
    </parent>
    <description>
        This library focuses purely on providing AVRO serialization and deserialization support
        for the types defined in the Essentials types library.
    </description>

    <artifactId>types-avro</artifactId>
    <packaging>jar</packaging>
    <name>essentials-types-avro</name>

    <properties>
        <avro.version>1.11.0</avro.version>
    </properties>

    <dependencies>
        <dependency>
            <groupId>dk.cloudcreate.essentials</groupId>
            <artifactId>types</artifactId>
            <version>${project.version}</version>
        </dependency>

        <dependency>
            <groupId>org.apache.avro</groupId>
            <artifactId>avro</artifactId>
            <version>${avro.version}</version>
            <scope>provided</scope>
        </dependency>
    </dependencies>

    <build>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-jar-plugin</artifactId>
                    <configuration>
                        <archive>
                            <manifestEntries>
                                <Automatic-Module-Name>dk.cloudcreate.essentials.types.avro</Automatic-Module-Name>
                            </manifestEntries>
                        </archive>
                    </configuration>
                </plugin>
            </plugins>
        </pluginManagement>

        <plugins>
            <plugin>
                <groupId>org.apache.avro</groupId>
                <artifactId>avro-maven-plugin</artifactId>
                <version>${avro.version}</version>
                <executions>
                    <execution>
                        <phase>generate-test-sources</phase>
                        <goals>
                            <goal>idl-protocol</goal>
                        </goals>
                        <configuration>
                            <stringType>String</stringType>
                            <enableDecimalLogicalType>false</enableDecimalLogicalType>
                            <customLogicalTypeFactories>
                                <logicalTypeFactory>dk.cloudcreate.essentials.types.avro.CurrencyCodeLogicalTypeFactory</logicalTypeFactory>
                                <logicalTypeFactory>dk.cloudcreate.essentials.types.avro.AmountLogicalTypeFactory</logicalTypeFactory>
                                <logicalTypeFactory>dk.cloudcreate.essentials.types.avro.PercentageLogicalTypeFactory</logicalTypeFactory>
                            </customLogicalTypeFactories>
                            <customConversions>
                                <conversion>dk.cloudcreate.essentials.types.avro.CurrencyCodeConversion</conversion>
                                <conversion>dk.cloudcreate.essentials.types.avro.AmountConversion</conversion>
                                <conversion>dk.cloudcreate.essentials.types.avro.PercentageConversion</conversion>
                            </customConversions>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>


</project>